<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xml:lang="ru" xmlns="http://www.w3.org/1999/xhtml" lang="ru"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" /><title>Парадигмы программирования / Введение в ООП (1)</title><meta name="author" content="" /><link rel="stylesheet" type="text/css" media="screen, projection, print" href="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/slidy.css" /><link rel="stylesheet" type="text/css" href="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/prettify.css" /><link rel="stylesheet" type="text/css" href="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/kgeorgiy-slides.css" /><script type="text/javascript" async="" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/watch.js"></script><script type="text/javascript" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/slidy.js" charset="utf-8"></script><script type="text/javascript" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/kgeorgiy-slides.js" charset="utf-8"></script><script type="text/javascript" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/prettify.js"></script><script type="text/javascript" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/lang-sql.js"></script><script type="text/javascript" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/lang-javaModule.js"></script><script type="text/javascript" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/lang-scala.js"></script><script type="text/javascript" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/MathJax.js"></script><script type="text/javascript">MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']], displayMath: [['$$','$$']], ignoreClass: "", processClass: "math|lang-math"}});</script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom &gt; * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd &gt; * {display: block!important}
.MJXp-script-box &gt; *  {display: table!important; height: 50%}
.MJXp-script-box &gt; * &gt; * {display: table-cell!important; vertical-align: top}
.MJXp-script-box &gt; *:last-child &gt; * {vertical-align: bottom}
.MJXp-script-box &gt; * &gt; * &gt; * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over &gt; * {display: block!important}
.MJXp-munderover &gt; * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable &gt; * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr &gt; .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child &gt; .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr &gt; .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child &gt; .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style type="text/css">.MathJax_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}
.MathJax .merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MathJax .MJX-monospace {font-family: monospace}
.MathJax .MJX-sans-serif {font-family: sans-serif}
#MathJax_Tooltip {background-color: InfoBackground; color: InfoText; border: 1px solid black; box-shadow: 2px 2px 5px #AAAAAA; -webkit-box-shadow: 2px 2px 5px #AAAAAA; -moz-box-shadow: 2px 2px 5px #AAAAAA; -khtml-box-shadow: 2px 2px 5px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true'); padding: 3px 4px; z-index: 401; position: absolute; left: 0; top: 0; width: auto; height: auto; display: none}
.MathJax {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}
.MathJax:focus, body :focus .MathJax {display: inline-table}
.MathJax.MathJax_FullWidth {text-align: center; display: table-cell!important; width: 10000em!important}
.MathJax img, .MathJax nobr, .MathJax a {border: 0; padding: 0; margin: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; vertical-align: 0; line-height: normal; text-decoration: none}
img.MathJax_strut {border: 0!important; padding: 0!important; margin: 0!important; vertical-align: 0!important}
.MathJax span {display: inline; position: static; border: 0; padding: 0; margin: 0; vertical-align: 0; line-height: normal; text-decoration: none}
.MathJax nobr {white-space: nowrap!important}
.MathJax img {display: inline!important; float: none!important}
.MathJax * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}
.MathJax_Processing {visibility: hidden; position: fixed; width: 0; height: 0; overflow: hidden}
.MathJax_Processed {display: none!important}
.MathJax_ExBox {display: block!important; overflow: hidden; width: 1px; height: 60ex; min-height: 0; max-height: none}
.MathJax .MathJax_EmBox {display: block!important; overflow: hidden; width: 1px; height: 60em; min-height: 0; max-height: none}
.MathJax_LineBox {display: table!important}
.MathJax_LineBox span {display: table-cell!important; width: 10000em!important; min-width: 0; max-width: none; padding: 0; border: 0; margin: 0}
.MathJax .MathJax_HitBox {cursor: text; background: white; opacity: 0; filter: alpha(opacity=0)}
.MathJax .MathJax_HitBox * {filter: none; opacity: 1; background: transparent}
#MathJax_Tooltip * {filter: none; opacity: 1; background: transparent}
@font-face {font-family: MathJax_Main; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/woff/MathJax_Main-Regular.woff?V=2.7.2') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/otf/MathJax_Main-Regular.otf?V=2.7.2') format('opentype')}
@font-face {font-family: MathJax_Main; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/woff/MathJax_Main-Bold.woff?V=2.7.2') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/otf/MathJax_Main-Bold.otf?V=2.7.2') format('opentype'); font-weight: bold}
@font-face {font-family: MathJax_Main; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/woff/MathJax_Main-Italic.woff?V=2.7.2') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/otf/MathJax_Main-Italic.otf?V=2.7.2') format('opentype'); font-style: italic}
@font-face {font-family: MathJax_Math; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/woff/MathJax_Math-Italic.woff?V=2.7.2') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/otf/MathJax_Math-Italic.otf?V=2.7.2') format('opentype'); font-style: italic}
@font-face {font-family: MathJax_Caligraphic; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/woff/MathJax_Caligraphic-Regular.woff?V=2.7.2') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/otf/MathJax_Caligraphic-Regular.otf?V=2.7.2') format('opentype')}
@font-face {font-family: MathJax_Size1; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/woff/MathJax_Size1-Regular.woff?V=2.7.2') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/otf/MathJax_Size1-Regular.otf?V=2.7.2') format('opentype')}
@font-face {font-family: MathJax_Size2; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/woff/MathJax_Size2-Regular.woff?V=2.7.2') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/otf/MathJax_Size2-Regular.otf?V=2.7.2') format('opentype')}
@font-face {font-family: MathJax_Size3; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/woff/MathJax_Size3-Regular.woff?V=2.7.2') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/otf/MathJax_Size3-Regular.otf?V=2.7.2') format('opentype')}
@font-face {font-family: MathJax_Size4; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/woff/MathJax_Size4-Regular.woff?V=2.7.2') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/fonts/HTML-CSS/TeX/otf/MathJax_Size4-Regular.otf?V=2.7.2') format('opentype')}
.MathJax .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style></head><body onload="prettyPrint()" style="visibility: visible;" class=" single_slide"><div style="visibility: hidden; overflow: hidden; position: absolute; top: 0px; height: 1px; width: auto; padding: 0px; border: 0px none; margin: 0px; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal;"><div id="MathJax_Hidden"><br /><br /><br /><br /><br /><br /></div></div><div id="MathJax_Message" style="display: none;"></div><div class=" slidy_toc hidden"><div class=" toc-heading">Оглавление</div><ol><li><a href="#(1)">Парадигмы программирования / Введение в ООП(1)</a></li><li class=" section"><a href="#(2)">Классы своими руками</a></li><li class=" subsection"><a href="#(3)">Стек на массиве</a></li><li><a href="#(4)">Описание стека</a></li><li><a href="#(5)">Модель</a></li><li><a href="#(6)">Контракты (1)</a></li><li><a href="#(7)">Контракты (2)</a></li><li class=" subsection"><a href="#(8)">Процедурная реализация на массиве</a></li><li><a href="#(9)">Заголовок</a></li><li><a href="#(10)">Функция push</a></li><li><a href="#(11)">Функции pop и peek</a></li><li><a href="#(12)">Функции size и isEmpty</a></li><li><a href="#(13)">Пример использования</a></li><li><a href="#(14)">Инкапсуляция</a></li><li class=" subsection"><a href="#(15)">Реализация на структурах</a></li><li><a href="#(16)">Заголовок</a></li><li><a href="#(17)">Преобразование</a></li><li><a href="#(18)">Функция push</a></li><li><a href="#(19)">Функции pop и peek</a></li><li><a href="#(20)">Функции size и isEmpty</a></li><li><a href="#(21)">Пример использования</a></li><li class=" subsection"><a href="#(22)">Преобразование в класс</a></li><li><a href="#(23)">Заголовок</a></li><li><a href="#(24)">Преобразование функций в методы</a></li><li><a href="#(25)">Метод push</a></li><li><a href="#(26)">Методы pop и peek</a></li><li><a href="#(27)">Методы size и isEmpty</a></li><li><a href="#(28)">Пример использования</a></li><li class=" section"><a href="#(29)">Конструкторы</a></li><li><a href="#(30)">Элемент связного списка</a></li><li><a href="#(31)">Инициализация</a></li><li><a href="#(32)">Конструктор</a></li><li><a href="#(33)">Как работало раньше?</a></li><li class=" section"><a href="#(34)">Интерфейсы</a></li><li class=" subsection"><a href="#(35)">Стек на связном списке</a></li><li><a href="#(36)">Устройство</a></li><li><a href="#(37)">Реализация</a></li><li><a href="#(38)">Метод push</a></li><li><a href="#(39)">Метод pop</a></li><li><a href="#(40)">Метод peek</a></li><li><a href="#(41)">Методы size и isEmpty</a></li><li><a href="#(42)">Пример использования</a></li><li class=" subsection"><a href="#(43)">Определение интерфейса</a></li><li><a href="#(44)">Проблема</a></li><li><a href="#(45)">Решение</a></li><li><a href="#(46)">Реализация интерфейса</a></li><li><a href="#(47)">Пример использования</a></li><li class=" subsection"><a href="#(48)">Эффективное устройство интерфейсов</a></li><li><a href="#(49)">Проверка типа</a></li><li><a href="#(50)">Реализация на основе instanceof </a></li><li><a href="#(51)">Свойства</a></li><li><a href="#(52)">Таблицы виртуальных функций </a></li><li><a href="#(53)">Свойства</a></li><li class=" subsection"><a href="#(54)">Полиморфизм</a></li><li><a href="#(55)">Полиморфизм</a></li><li><a href="#(56)">Пример полиморфизма (1)</a></li><li><a href="#(57)">Пример полиморфизма (2)</a></li><li><a href="#(58)">Пример полиморфизма (3)</a></li><li><a href="#(59)">Пример полиморфизма (4)</a></li><li><a href="#(60)">Пример полиморфизма (5)</a></li><li class=" section"><a href="#(61)">Наследование</a></li><li><a href="#(62)">Общее поведение</a></li><li><a href="#(63)">Вынос общего поведения</a></li><li><a href="#(64)">Устранение дублирования</a></li><li class=" section"><a href="#(65)">Память и сборка мусора</a></li><li><a href="#(66)">Интерфейс Copiable</a></li><li><a href="#(67)">Стек на массиве</a></li><li><a href="#(68)">Проблема</a></li><li><a href="#(69)">Копирование массива </a></li><li><a href="#(70)">Соглашения Java</a></li><li><a href="#(71)">Сборка мусора</a></li><li><a href="#(72)">Уточнение возвращаемого значения</a></li><li><a href="#(73)">Стек на связном списке</a></li><li><a href="#(74)">Наследование интерфейсов</a></li><li class=" section"><a href="#(75)">Преобразование объекта в строку</a></li><li><a href="#(76)">Метод toString</a></li><li><a href="#(77)">Класс StringBuilder</a></li><li><a href="#(78)">Класс StringJoiner</a></li><li class=" section"><a href="#(79)">Основные принципы ООП</a></li><li><a href="#(80)">Принципы SOLID</a></li><li><a href="#(81)">Single Responsibility</a></li><li><a href="#(82)">Open/Closed</a></li><li><a href="#(83)">Liskov Substitution</a></li><li><a href="#(84)">Interface Segregation</a></li><li><a href="#(85)">Dependency Inversion</a></li><li class=" section"><a href="#(86)">Особенности ООП</a></li><li class=" subsection"><a href="#(87)">Прямоугольник и Квадрат</a></li><li><a href="#(88)">Постановка задачи</a></li><li><a href="#(89)">Является (is-a)</a></li><li><a href="#(90)">Расширение</a></li><li><a href="#(91)">Возможные решения</a></li><li><a href="#(92)">Неподдерживаемые действия</a></li><li><a href="#(93)">Ослабление контракта</a></li><li><a href="#(94)">Возврат нового</a></li><li><a href="#(95)">Вынос изменений</a></li><li><a href="#(96)">Выделение общего предка</a></li><li><a href="#(97)">Отказ от наследование</a></li><li><a href="#(98)">Подмена класса</a></li><li class=" subsection"><a href="#(99)">Равенство</a></li><li><a href="#(100)">Сущности и значения</a></li><li><a href="#(101)">Поддержка в Java</a></li><li><a href="#(102)">Реализация equals</a></li><li><a href="#(103)">Свойства равенства</a></li><li><a href="#(104)">Реализация equals (2)</a></li><li><a href="#(105)">Пример equals (3)</a></li><li><a href="#(106)">Наследование и equals</a></li><li class=" section"><a href="#(107)">Заключение</a></li><li><a href="#(108)">Ссылки</a></li><li><a href="#(109)">Вопросы</a></li></ol><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /></div><div id="all" style="font-size: 100%;">
<div class="slide cover first-slide"><div class="content"><div class="course">Парадигмы программирования</div><hr /><div class="lecture">Введение в ООП<div></div></div><div class="link"><a href="https://kgeorgiy.info/courses/paradigms/">https://kgeorgiy.info/courses/paradigms/</a></div><div class="copyright"><a href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.ru"><span class="copyright">Copyright © Георгий Корнеев</span><img src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/by-nc-sa.png" alt="Attribution-NonCommercial-ShareAlike" /></a></div></div></div>
<div class="slide section hidden"><div class="content"><h1>Классы своими руками</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc current">Классы своими руками</a><ol class="level-2 toc-2"><li><a href="#(3)" class="">Стек на массиве</a></li><li><a href="#(8)" class="">Процедурная реализация на массиве</a></li><li><a href="#(15)" class="">Реализация на структурах</a></li><li><a href="#(22)" class="">Преобразование в класс</a></li></ol></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">2</span></div></div></div></div>
<div class="slide subsection hidden"><div class="content"><h1>Стек на массиве</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc current">Классы своими руками</a><ol class="level-2 toc-2"><li><a href="#(3)" class=" current">Стек на массиве</a></li><li><a href="#(8)" class="">Процедурная реализация на массиве</a></li><li><a href="#(15)" class="">Реализация на структурах</a></li><li><a href="#(22)" class="">Преобразование в класс</a></li></ol></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">3</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Описание стека</h1><div class="body"><ul class="item-1 level-1"><li>Переменные<ul class="item-2 level-2"><li><var>size</var> — число элементов</li><li><var>elements</var> — массив элементов</li></ul></li><li>Методы<ul class="item-2 level-2"><li><var>push</var> — добавить элемент</li><li><var>pop</var> — удалить элемент</li><li><var>peek</var> — получить элемент на вершине</li><li><var>size</var> — число элементов</li><li><var>isEmpty</var> — проверка на пустоту</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">4</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Модель</h1><div class="body"><ul class="item-1 level-1"><li>Последовательность чисел<ul class="item-2 level-2"><li><span class="mathO"><span class="math"><span class="MathJax_Preview" style="color: inherit; display: none;"></span><span class="MathJax" id="MathJax-Element-1-Frame" tabindex="0" style="position: relative;" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;[&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;]&lt;/mo&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;[&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;]&lt;/mo&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;mo&gt;&amp;#x2026;&lt;/mo&gt;&lt;mo&gt;,&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;[&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;]&lt;/mo&gt;&lt;/math&gt;" role="presentation"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-1" style="width: 8.957em; display: inline-block;"><span style="display: inline-block; position: relative; width: 7.522em; height: 0px; font-size: 119%;"><span style="position: absolute; clip: rect(1.485em, 1007.4em, 2.585em, -1000em); top: -2.285em; left: 0em;"><span class="mrow" id="MathJax-Span-2"><span class="mi" id="MathJax-Span-3" style="font-family: MathJax_Math; font-style: italic;">a</span><span class="mo" id="MathJax-Span-4" style="font-family: MathJax_Main;">[</span><span class="mn" id="MathJax-Span-5" style="font-family: MathJax_Main;">1</span><span class="mo" id="MathJax-Span-6" style="font-family: MathJax_Main;">]</span><span class="mo" id="MathJax-Span-7" style="font-family: MathJax_Main;">,</span><span class="mi" id="MathJax-Span-8" style="font-family: MathJax_Math; font-style: italic; padding-left: 0.167em;">a</span><span class="mo" id="MathJax-Span-9" style="font-family: MathJax_Main;">[</span><span class="mn" id="MathJax-Span-10" style="font-family: MathJax_Main;">2</span><span class="mo" id="MathJax-Span-11" style="font-family: MathJax_Main;">]</span><span class="mo" id="MathJax-Span-12" style="font-family: MathJax_Main;">,</span><span class="mo" id="MathJax-Span-13" style="font-family: MathJax_Main; padding-left: 0.167em;">…</span><span class="mo" id="MathJax-Span-14" style="font-family: MathJax_Main; padding-left: 0.167em;">,</span><span class="mi" id="MathJax-Span-15" style="font-family: MathJax_Math; font-style: italic; padding-left: 0.167em;">a</span><span class="mo" id="MathJax-Span-16" style="font-family: MathJax_Main;">[</span><span class="mi" id="MathJax-Span-17" style="font-family: MathJax_Math; font-style: italic;">n</span><span class="mo" id="MathJax-Span-18" style="font-family: MathJax_Main;">]</span></span><span style="display: inline-block; width: 0px; height: 2.285em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.317em; border-left: 0px solid; width: 0px; height: 1.23em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>,</mo><mi>a</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo>,</mo><mo>…</mo><mo>,</mo><mi>a</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></math></span></span><script type="math/tex" id="MathJax-Element-1">a[1], a[2], \ldots, a[n]</script></span></span></li><li>Операции с последним элементом</li></ul></li><li>Инвариант<ul class="item-2 level-2"><li><span class="mathO"><span class="math"><span class="MathJax_Preview" style="color: inherit; display: none;"></span><span class="MathJax" id="MathJax-Element-2-Frame" tabindex="0" style="position: relative;" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2265;&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/math&gt;" role="presentation"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-19" style="width: 2.903em; display: inline-block;"><span style="display: inline-block; position: relative; width: 2.435em; height: 0px; font-size: 119%;"><span style="position: absolute; clip: rect(1.569em, 1002.4em, 2.473em, -1000em); top: -2.285em; left: 0em;"><span class="mrow" id="MathJax-Span-20"><span class="mi" id="MathJax-Span-21" style="font-family: MathJax_Math; font-style: italic;">n</span><span class="mo" id="MathJax-Span-22" style="font-family: MathJax_Main; padding-left: 0.278em;">≥</span><span class="mn" id="MathJax-Span-23" style="font-family: MathJax_Main; padding-left: 0.278em;">0</span></span><span style="display: inline-block; width: 0px; height: 2.285em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 0.996em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>n</mi><mo>≥</mo><mn>0</mn></math></span></span><script type="math/tex" id="MathJax-Element-2">n \ge 0</script></span></span></li><li><span class="mathO"><span class="math"><span class="MathJax_Preview" style="color: inherit; display: none;"></span><span class="MathJax" id="MathJax-Element-3-Frame" tabindex="0" style="position: relative;" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mo&gt;&amp;#x2200;&lt;/mo&gt;&lt;/mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1..&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;&amp;#x2260;&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;/math&gt;" role="presentation"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-24" style="width: 10.325em; display: inline-block;"><span style="display: inline-block; position: relative; width: 8.673em; height: 0px; font-size: 119%;"><span style="position: absolute; clip: rect(1.519em, 1008.64em, 2.55em, -1000em); top: -2.285em; left: 0em;"><span class="mrow" id="MathJax-Span-25"><span class="texatom" id="MathJax-Span-26"><span class="mrow" id="MathJax-Span-27"><span class="mo" id="MathJax-Span-28" style="font-family: MathJax_Main;">∀</span></span></span><span class="mi" id="MathJax-Span-29" style="font-family: MathJax_Math; font-style: italic;">i</span><span class="mo" id="MathJax-Span-30" style="font-family: MathJax_Main; padding-left: 0.278em;">=</span><span class="mn" id="MathJax-Span-31" style="font-family: MathJax_Main; padding-left: 0.278em;">1..</span><span class="mi" id="MathJax-Span-32" style="font-family: MathJax_Math; font-style: italic;">n</span><span class="mo" id="MathJax-Span-33" style="font-family: MathJax_Main; padding-left: 0.278em;">:</span><span class="msubsup" id="MathJax-Span-34" style="padding-left: 0.278em;"><span style="display: inline-block; position: relative; width: 0.848em; height: 0px;"><span style="position: absolute; clip: rect(3.512em, 1000.51em, 4.063em, -1000em); top: -4.003em; left: 0em;"><span class="mi" id="MathJax-Span-35" style="font-family: MathJax_Math; font-style: italic;">a</span><span style="display: inline-block; width: 0px; height: 4.003em;"></span></span><span style="position: absolute; top: -3.853em; left: 0.529em;"><span class="mi" id="MathJax-Span-36" style="font-size: 70.7%; font-family: MathJax_Math; font-style: italic;">i</span><span style="display: inline-block; width: 0px; height: 4.003em;"></span></span></span></span><span class="mo" id="MathJax-Span-37" style="font-family: MathJax_Main; padding-left: 0.278em;">≠</span><span class="mi" id="MathJax-Span-38" style="font-family: MathJax_Math; font-style: italic; padding-left: 0.278em;">n</span><span class="mi" id="MathJax-Span-39" style="font-family: MathJax_Math; font-style: italic;">u</span><span class="mi" id="MathJax-Span-40" style="font-family: MathJax_Math; font-style: italic;">l</span><span class="mi" id="MathJax-Span-41" style="font-family: MathJax_Math; font-style: italic;">l</span></span><span style="display: inline-block; width: 0px; height: 2.285em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.276em; border-left: 0px solid; width: 0px; height: 1.148em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow class="MJX-TeXAtom-ORD"><mo>∀</mo></mrow><mi>i</mi><mo>=</mo><mn>1..</mn><mi>n</mi><mo>:</mo><msub><mi>a</mi><mi>i</mi></msub><mo>≠</mo><mi>n</mi><mi>u</mi><mi>l</mi><mi>l</mi></math></span></span><script type="math/tex" id="MathJax-Element-3">∀i=1..n: a_i ≠ null</script></span></span></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">5</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Контракты (1)</h1><div class="body"><ul class="item-1 level-1"><li><var>push</var><ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// pre: element ≠ null</span><span class="pln">
</span><span class="com">// post: n = n' + 1 ∧ ∀i=1..n' : a[i]' = a[i] ∧ a[n] = element</span><span class="pln">
</span><span class="kwd">void</span><span class="pln"> push</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> element</span><span class="pun">)</span></pre></li></ul></li><li><var>pop</var><ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// pre: n &gt; 0</span><span class="pln">
</span><span class="com">// post: ℝ = a[n] ∧ n = n' − 1 ∧ ∀i=1..n : a[i]' = a[i]</span><span class="pln">
</span><span class="typ">Object</span><span class="pln"> pop</span><span class="pun">()</span></pre></li></ul></li><li><var>peek</var><ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// pre: n &gt; 0</span><span class="pln">
</span><span class="com">// peek: ℝ = a[n] ∧ n = n' ∧ ∀i=1..n : a[i]' = a[i]</span><span class="pln">
</span><span class="typ">Object</span><span class="pln"> peek</span><span class="pun">()</span></pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">6</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Контракты (2)</h1><div class="body"><ul class="item-1 level-1"><li><var>size</var><ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// post: ℝ = n ∧ n = n' ∧ ∀i=1..n : a[i]' = a[i]</span><span class="pln">
</span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">()</span></pre></li></ul></li><li><var>isEmpty</var><ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// post: ℝ = n &gt; 0 ∧ n = n' ∧ ∀i=1..n : a[i]' = a[i]</span><span class="pln">
</span><span class="kwd">boolean</span><span class="pln"> isEmpty</span><span class="pun">()</span></pre></li></ul></li><li class="incremental"><div class="non-incremental">Дублирование постусловий<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// post: n = n' ∧ ∀i=1..n : a[i]' = a[i]</span></pre></li><li class="incremental"><div class="non-incremental"><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// post: immutable </span></pre></div></li></ul></div></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">7</span></div></div></div></div>
<div class="slide subsection hidden"><div class="content"><h1>Процедурная реализация на массиве</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc current">Классы своими руками</a><ol class="level-2 toc-2"><li><a href="#(3)" class="">Стек на массиве</a></li><li><a href="#(8)" class=" current">Процедурная реализация на массиве</a></li><li><a href="#(15)" class="">Реализация на структурах</a></li><li><a href="#(22)" class="">Преобразование в класс</a></li></ol></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">8</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Заголовок</h1><div class="body"><ul class="item-1 level-1"><li>Объявление модуля <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ArrayStackModule</span><span class="pln"> </span><span class="pun">{</span></pre></li><li>Данные <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">static</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">static</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[]</span><span class="pln"> elements </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[</span><span class="lit">5</span><span class="pun">];</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">9</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Функция push</h1><div class="body"><ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> push</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> element</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> element </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
    ensureCapacity</span><span class="pun">(</span><span class="pln">size </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">);</span><span class="pln">
    elements</span><span class="pun">[</span><span class="pln">size</span><span class="pun">++]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> element</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> ensureCapacity</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> capacity</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">capacity </span><span class="pun">&lt;=</span><span class="pln"> elements</span><span class="pun">.</span><span class="pln">length</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="typ">Object</span><span class="pun">[]</span><span class="pln"> newElements </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[</span><span class="lit">2</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> capacity</span><span class="pun">];</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> size</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        newElements</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> elements</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    elements </span><span class="pun">=</span><span class="pln"> newElements</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">10</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Функции pop и peek</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">static</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> pop</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> size </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> elements</span><span class="pun">[--</span><span class="pln">size</span><span class="pun">];</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">static</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> peek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> size </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> elements</span><span class="pun">[</span><span class="pln">size </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">];</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">11</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Функции size и isEmpty</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">static</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> size</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> isEmpty</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> size </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">12</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Пример использования</h1><div class="body"><ul class="item-1 level-1"><li>Добавление элементов <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">10</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">ArrayStackModule</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre></li><li>Получение элементов <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="typ">ArrayStackModule</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="pln">
        </span><span class="typ">ArrayStackModule</span><span class="pun">.</span><span class="pln">size</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" "</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
        </span><span class="typ">ArrayStackModule</span><span class="pun">.</span><span class="pln">peek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" "</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
        </span><span class="typ">ArrayStackModule</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">()</span><span class="pln">
    </span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">13</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Инкапсуляция</h1><div class="body"><ul class="item-1 level-1"><li>Сокрытие деталей реализации<ul class="item-2 level-2"><li>Доступ на уровне модуля</li><li>Способ поддерживать контракт</li></ul></li><li>Пример<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size
</span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[]</span><span class="pln"> elements
</span><span class="kwd">public</span><span class="pln"> push</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> element</span><span class="pun">)</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> pop</span><span class="pun">()</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> peek</span><span class="pun">()</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">()</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> isEmpty</span><span class="pun">()</span><span class="pln">
</span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> ensureCapacity</span><span class="pun">()</span></pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">14</span></div></div></div></div>
<div class="slide subsection hidden"><div class="content"><h1>Реализация на структурах</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc current">Классы своими руками</a><ol class="level-2 toc-2"><li><a href="#(3)" class="">Стек на массиве</a></li><li><a href="#(8)" class="">Процедурная реализация на массиве</a></li><li><a href="#(15)" class=" current">Реализация на структурах</a></li><li><a href="#(22)" class="">Преобразование в класс</a></li></ol></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">15</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Заголовок</h1><div class="body"><ul class="item-1 level-1"><li>Объявление структуры <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ArrayStackADT</span><span class="pln"> </span><span class="pun">{</span></pre></li><li>Данные <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">private</span><span class="pln"> </span><span class="com">/*static*/</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">private</span><span class="pln"> </span><span class="com">/*static*/</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[]</span><span class="pln"> elements </span><span class="pun">=</span><span class="pln">
        </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[</span><span class="lit">5</span><span class="pun">];</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">16</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Преобразование</h1><div class="body"><ul class="item-1 level-1"><li>Добавление аргументов функций<ul class="item-2 level-2"><li>Первый аргумент — ссылка на структуру</li><li><var>ArrayStackADT stack</var></li></ul></li><li>Доступ к переменным<ul class="item-2 level-2"><li>Добавление префикса <var>stack.</var></li></ul></li><li>Вызов функций<ul class="item-2 level-2"><li>Передача первым аргументом ссылки</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">17</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Функция push</h1><div class="body"><ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> push</span><span class="pun">(</span><span class="typ">ArrayStackADT</span><span class="pln"> stack</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> element</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> element </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
    ensureCapacity</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">,</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">size </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">);</span><span class="pln">
    stack</span><span class="pun">.</span><span class="pln">elements</span><span class="pun">[</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">size</span><span class="pun">++]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> element</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> ensureCapacity</span><span class="pun">(</span><span class="typ">ArrayStackADT</span><span class="pln"> stack</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> capacity</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">capacity </span><span class="pun">&lt;=</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">elements</span><span class="pun">.</span><span class="pln">length</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="typ">Object</span><span class="pun">[]</span><span class="pln"> newElements </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[</span><span class="lit">2</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> capacity</span><span class="pun">];</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">size</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        newElements</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">elements</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    stack</span><span class="pun">.</span><span class="pln">elements </span><span class="pun">=</span><span class="pln"> newElements</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">18</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Функции pop и peek</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> pop</span><span class="pun">(</span><span class="typ">ArrayStackADT</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">size </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">elements</span><span class="pun">[--</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">size</span><span class="pun">];</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> peek</span><span class="pun">(</span><span class="typ">ArrayStackADT</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">size </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">elements</span><span class="pun">[</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">size </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">];</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">19</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Функции size и isEmpty</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">(</span><span class="typ">ArrayStackADT</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">size</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> isEmpty</span><span class="pun">(</span><span class="pln">
    </span><span class="typ">ArrayStackADT</span><span class="pln"> stack
</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">size </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">20</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Пример использования</h1><div class="body"><ul class="item-1 level-1"><li>Добавление элементов <pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">ArrayStackADT</span><span class="pln"> stack </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStackADT</span><span class="pun">();</span><span class="pln">
</span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">10</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">ArrayStackADT</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">,</span><span class="pln"> i</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre></li><li>Получение элементов <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="typ">ArrayStackADT</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="pln">
        </span><span class="typ">ArrayStackADT</span><span class="pun">.</span><span class="pln">size</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" "</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
        </span><span class="typ">ArrayStackADT</span><span class="pun">.</span><span class="pln">peek</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" "</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
        </span><span class="typ">ArrayStackADT</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">21</span></div></div></div></div>
<div class="slide subsection hidden"><div class="content"><h1>Преобразование в класс</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc current">Классы своими руками</a><ol class="level-2 toc-2"><li><a href="#(3)" class="">Стек на массиве</a></li><li><a href="#(8)" class="">Процедурная реализация на массиве</a></li><li><a href="#(15)" class="">Реализация на структурах</a></li><li><a href="#(22)" class=" current">Преобразование в класс</a></li></ol></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">22</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Заголовок</h1><div class="body"><ul class="item-1 level-1"><li>Объявление класса <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pln"> </span><span class="pun">{</span></pre></li><li>Данные <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">private</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[]</span><span class="pln"> elements </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[</span><span class="lit">10</span><span class="pun">];</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">23</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Преобразование функций в методы</h1><div class="body"><ul class="item-1 level-1"><li>Изменение модификаторов<ul class="item-2 level-2"><li>Убрать <var>static</var></li></ul></li><li>Замена первого аргумента<ul class="item-2 level-2"><li>Замена на аргумента на неявный (<var>this</var>)</li></ul></li><li>Доступ к переменным<ul class="item-2 level-2"><li>Замена префикса <var>stack.</var> на <var>this.</var></li><li>Префикс <var>this.</var> можно опускать</li></ul></li><li>Вызов метода<ul class="item-2 level-2"><li><var>method(stack, ...)</var> ⇒ <var>stack.method(...)</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">24</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Метод push</h1><div class="body"><ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> push</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> element</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> element </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
    ensureCapacity</span><span class="pun">(</span><span class="pln">size </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">);</span><span class="pln">
    elements</span><span class="pun">[</span><span class="pln">size</span><span class="pun">++]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> element</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> ensureCapacity</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> capacity</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">capacity </span><span class="pun">&lt;=</span><span class="pln"> elements</span><span class="pun">.</span><span class="pln">length</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="typ">Object</span><span class="pun">[]</span><span class="pln"> newElements </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[</span><span class="lit">2</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> capacity</span><span class="pun">];</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> size</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        newElements</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> elements</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    elements </span><span class="pun">=</span><span class="pln"> newElements</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">25</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Методы pop и peek</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> pop</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> size </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> elements</span><span class="pun">[--</span><span class="pln">size</span><span class="pun">];</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> peek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> size </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> elements</span><span class="pun">[</span><span class="pln">size </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">];</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">26</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Методы size и isEmpty</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> size</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> isEmpty</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> size </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">27</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Пример использования</h1><div class="body"><ul class="item-1 level-1"><li>Добавление элементов <pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">ArrayStack</span><span class="pln"> stack </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">();</span><span class="pln">
</span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">10</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    stack</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre></li><li>Получение элементов <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">size</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" "</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
        stack</span><span class="pun">.</span><span class="pln">peek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">());</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">28</span></div></div></div></div>
<div class="slide section hidden"><div class="content"><h1>Конструкторы</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc current">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">29</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Элемент связного списка</h1><div class="body"><ul class="item-1 level-1"><li>Объявление класса <pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// inv: value != null</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Node</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="typ">Object</span><span class="pln"> value</span><span class="pun">;</span><span class="pln">
   </span><span class="typ">Node</span><span class="pln"> next</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li><li>Инициализация <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> value</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Node</span><span class="pln"> next</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> value </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">value </span><span class="pun">=</span><span class="pln"> value</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">next </span><span class="pun">=</span><span class="pln"> next</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">30</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Инициализация</h1><div class="body"><ul class="item-1 level-1"><li>Значения по умолчанию <pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">value </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
next </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></pre><ul class="item-2 level-2"><li><span class="warn">Инвариант нарушен</span></li></ul></li><li>Метод <var>init</var><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">assert</span><span class="pln"> value </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">value </span><span class="pun">=</span><span class="pln"> value</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">next </span><span class="pun">=</span><span class="pln"> next</span><span class="pun">;</span></pre><ul class="item-2 level-2"><li>Инвариант соблюдается</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">31</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Конструктор</h1><div class="body"><ul class="item-1 level-1"><li>Соблюдение инварианта при создании</li><li>Пример конструктора <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="typ">Node</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> value</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Node</span><span class="pln"> next</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> value </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">value </span><span class="pun">=</span><span class="pln"> value</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">next </span><span class="pun">=</span><span class="pln"> next</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li><li>Вызов конструктора <pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Node</span><span class="pln"> node </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Node</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">);</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">32</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Как работало раньше?</h1><div class="body"><ul class="item-1 level-1"><li>Конструктор по умолчанию<ul class="item-2 level-2"><li>Без аргументов</li><li>Ничего не делает</li><li>Создается, если нет других</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">33</span></div></div></div></div>
<div class="slide section hidden"><div class="content"><h1>Интерфейсы</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc current">Интерфейсы</a><ol class="level-2 toc-2"><li><a href="#(35)" class="">Стек на связном списке</a></li><li><a href="#(43)" class="">Определение интерфейса</a></li><li><a href="#(48)" class="">Эффективное устройство интерфейсов</a></li><li><a href="#(54)" class="">Полиморфизм</a></li></ol></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">34</span></div></div></div></div>
<div class="slide subsection hidden"><div class="content"><h1>Стек на связном списке</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc current">Интерфейсы</a><ol class="level-2 toc-2"><li><a href="#(35)" class=" current">Стек на связном списке</a></li><li><a href="#(43)" class="">Определение интерфейса</a></li><li><a href="#(48)" class="">Эффективное устройство интерфейсов</a></li><li><a href="#(54)" class="">Полиморфизм</a></li></ol></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">35</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Устройство</h1><div class="body"><ul class="item-1 level-1"><li>Исходное состояние </li></ul><div class="img-width"><img class="width" style="width: 50%" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/LinkedStack-0.svg" /></div><ul class="item-1 level-1"><li><var>push(v¹)</var></li></ul><div class="img-width"><img class="width" style="width: 50%" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/LinkedStack-1.svg" /></div><ul class="item-1 level-1"><li><var>push(v²)</var></li></ul><div class="img-width"><img class="width" style="width: 50%" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/LinkedStack-2.svg" /></div><ul class="item-1 level-1"><li><var>pop()</var></li></ul><div class="img-width"><img class="width" style="width: 50%" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/LinkedStack-1.svg" /></div></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">36</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Реализация</h1><div class="body"><ul class="item-1 level-1"><li>Объявление класса <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">LinkedStack</span><span class="pln"> </span><span class="pun">{</span></pre></li><li>Данные <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">private</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Node</span><span class="pln"> head</span><span class="pun">;</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">37</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Метод push</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// pre: element ≠ null</span><span class="pln">
</span><span class="com">// post: n = n' + 1 ∧ ∀i=1..n' : a[i]' = a[i]∧</span><span class="pln">
</span><span class="com">//          ∧ a[n] = element</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> push</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> element</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> element </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
    size</span><span class="pun">++;</span><span class="pln">
    head </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Node</span><span class="pun">(</span><span class="pln">element</span><span class="pun">,</span><span class="pln"> head</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">38</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Метод pop</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// pre: n &gt; 0</span><span class="pln">
</span><span class="com">// post: ℝ = aₙ₊₁ ∧ n = n' − 1 ∧</span><span class="pln">
</span><span class="com">//          ∧ ∀i=1..n : a[i]' = a[i]</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> pop</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> size </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    size</span><span class="pun">--;</span><span class="pln">
    </span><span class="typ">Object</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> head</span><span class="pun">.</span><span class="pln">value</span><span class="pun">;</span><span class="pln">
    head </span><span class="pun">=</span><span class="pln"> head</span><span class="pun">.</span><span class="pln">next</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> result</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">39</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Метод peek</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// pre: n &gt; 0</span><span class="pln">
</span><span class="com">// post: ℝ = a[n] ∧ immutable</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> peek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> size </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> head</span><span class="pun">.</span><span class="pln">value</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">40</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Методы size и isEmpty</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// post: ℝ = n ∧ immutable</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> size</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// post: ℝ = n &gt; 0 ∧ immutable</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> isEmpty</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> size </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">41</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Пример использования</h1><div class="body"><ul class="item-1 level-1"><li>Добавление элементов <pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">LinkedStack</span><span class="pln"> stack </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">LinkedStack</span><span class="pun">();</span><span class="pln">
</span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">10</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    stack</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre></li><li>Получение элементов <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">size</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" "</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
        stack</span><span class="pun">.</span><span class="pln">peek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">());</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">42</span></div></div></div></div>
<div class="slide subsection hidden"><div class="content"><h1>Определение интерфейса</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc current">Интерфейсы</a><ol class="level-2 toc-2"><li><a href="#(35)" class="">Стек на связном списке</a></li><li><a href="#(43)" class=" current">Определение интерфейса</a></li><li><a href="#(48)" class="">Эффективное устройство интерфейсов</a></li><li><a href="#(54)" class="">Полиморфизм</a></li></ol></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">43</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Проблема</h1><div class="body"><ul class="item-1 level-1"><li>Одинаковый контракт стеков</li><li>Одинаково использование<ul class="item-2 level-2"><li>Почти одинаковый код</li></ul></li><li><span class="warn">Код знает тип списка</span><ul class="item-2 level-2"><li><var>ArrayStack</var></li><li><var>LinkedStack</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">44</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Решение</h1><div class="body"><ul class="item-1 level-1"><li>Интерфейс<ul class="item-2 level-2"><li>Набор методов</li><li>Контракт</li></ul></li><li>Пример <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">Stack</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="com">/*public*/</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> push</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> element</span><span class="pun">);</span><span class="pln">
    </span><span class="com">/*public*/</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> pop</span><span class="pun">();</span><span class="pln">
    </span><span class="com">/*public*/</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> peek</span><span class="pun">();</span><span class="pln">
    </span><span class="com">/*public*/</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">();</span><span class="pln">
    </span><span class="com">/*public*/</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> isEmpty</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">45</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Реализация интерфейса</h1><div class="body"><ul class="item-1 level-1"><li>Синтаксис <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Stack</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">...</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">LinkedStack</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Stack</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">...</span><span class="pln"> </span><span class="pun">}</span></pre></li><li>Реализация методов<ul class="item-2 level-2"><li>Проверяется компилятором</li></ul></li><li>Выполнение контракта<ul class="item-2 level-2"><li>Гарантируется программистом</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">46</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Пример использования</h1><div class="body"><ul class="item-1 level-1"><li>Добавление элементов <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> fill</span><span class="pun">(</span><span class="typ">Stack</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">10</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        stack</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li><li>Получение элементов <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dump</span><span class="pun">(</span><span class="typ">Stack</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">size</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" "</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
            stack</span><span class="pun">.</span><span class="pln">peek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">());</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">47</span></div></div></div></div>
<div class="slide subsection hidden"><div class="content"><h1>Эффективное устройство интерфейсов</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc current">Интерфейсы</a><ol class="level-2 toc-2"><li><a href="#(35)" class="">Стек на связном списке</a></li><li><a href="#(43)" class="">Определение интерфейса</a></li><li><a href="#(48)" class=" current">Эффективное устройство интерфейсов</a></li><li><a href="#(54)" class="">Полиморфизм</a></li></ol></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">48</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Проверка типа</h1><div class="body"><ul class="item-1 level-1"><li><var>a instanceof T</var><ul class="item-2 level-2"><li><var>a</var> может быть приведено к <var>T</var></li></ul></li><li>Примеры<ul class="item-2 level-2"><li><var>new ArrayStack() instanceof ArrayStack</var> ⇒ <var>true</var></li><li><var>new ArrayStack() instanceof LinkedStack</var> ⇒ <var>false</var></li><li><var>new ArrayStack() instanceof Stack</var> ⇒ <var>true</var></li><li><var>new ArrayStack() instanceof Object</var> ⇒ <var>true</var></li><li><var>new Object() instanceof Stack</var> ⇒ <var>false</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">49</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Реализация на основе instanceof </h1><div class="body"><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">class</span><span class="pln"> </span><span class="typ">StackImpl</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> pop</span><span class="pun">(</span><span class="typ">Stack</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">this</span><span class="pln"> </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">this</span><span class="pln"> </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">LinkedStack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">LinkedStack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="com">// ?</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">…</span><span class="pln">
</span><span class="pun">}</span></pre></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">50</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Свойства</h1><div class="body"><ul class="item-1 level-1"><li>Достоинства<ul class="item-2 level-2"><li>Простота реализации</li></ul></li><li>Недостатки<ul class="item-2 level-2"><li>Разбухание кода</li><li>Линейное время</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">51</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Таблицы виртуальных функций </h1><div class="body"><div class="img-width"><img class="width" style="width: 100%" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/Stack-vtbl.png" /></div></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">52</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Свойства</h1><div class="body"><ul class="item-1 level-1"><li>Достоинства<ul class="item-2 level-2"><li>Константные трудозатраты</li></ul></li><li>Недостатки<ul class="item-2 level-2"><li>Затраты памяти</li><li>Проблемы с множественным наследованием</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">53</span></div></div></div></div>
<div class="slide subsection hidden"><div class="content"><h1>Полиморфизм</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc current">Интерфейсы</a><ol class="level-2 toc-2"><li><a href="#(35)" class="">Стек на связном списке</a></li><li><a href="#(43)" class="">Определение интерфейса</a></li><li><a href="#(48)" class="">Эффективное устройство интерфейсов</a></li><li><a href="#(54)" class=" current">Полиморфизм</a></li></ol></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">54</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Полиморфизм</h1><div class="body"><ul class="item-1 level-1"><li>Один код, разные типы</li><li>Ad-hoc<ul class="item-2 level-2"><li>Для каждого типа свое поведение</li></ul></li><li>Универсальный<ul class="item-2 level-2"><li>Одинаковое поведение для всех типов</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">55</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Пример полиморфизма (1)</h1><div class="body"><ul class="item-1 level-1"><li>Операция сложения (<var>+</var>)</li><li>Примеры использования<ul class="item-2 level-2"><li><var>1 + 1</var></li><li><var>1.0 + 1</var></li><li><var>1 + 1.0</var></li><li><var>1.0 + 1.0</var></li></ul></li><li>Перегрузка времени компиляции по обоим параметрам<ul class="item-2 level-2"><li>Ad-hoc полиморфизм</li></ul></li><li>Перегрузка для разных типов + автоматизированное приведение типов<ul class="item-2 level-2"><li>Ad-hoc полиморфизм</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">56</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Пример полиморфизма (2)</h1><div class="body"><ul class="item-1 level-1"><li>Перегрузка функций <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">void</span><span class="pln"> test</span><span class="pun">(</span><span class="typ">LinkedStack</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">…</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="kwd">void</span><span class="pln"> test</span><span class="pun">(</span><span class="typ">ArrayStack</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">…</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="pun">…</span><span class="pln">
test</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">LinkedList</span><span class="pun">());</span><span class="pln">
test</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayList</span><span class="pun">());</span></pre></li><li>Ad-hoc полиморфизм</li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">57</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Пример полиморфизма (3)</h1><div class="body"><ul class="item-1 level-1"><li>Функция <var>printf</var></li><li>Примеры использования<ul class="item-2 level-2"><li><var>printf("%d", 10);</var></li><li><var>printf("%s", "hello");</var></li></ul></li><li>Перегрузка времени исполнения по всем параметрам, кроме первого + явная передача информации о типах<ul class="item-2 level-2"><li>Ad-hoc полиморфизм</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">58</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Пример полиморфизма (4)</h1><div class="body"><ul class="item-1 level-1"><li>Наследование в ООП<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">drawWithColor</span><span class="pun">(</span><span class="typ">Shape</span><span class="pln"> shape</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Color</span><span class="pln"> color</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    shape</span><span class="pun">.</span><span class="pln">setColor</span><span class="pun">(</span><span class="pln">color</span><span class="pun">);</span><span class="pln">
    shape</span><span class="pun">.</span><span class="pln">draw</span><span class="pun">()</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li><li><var>drawWithColor</var> – полиморфизм включения по первому параметру<ul class="item-2 level-2"><li>Параметрический полиморфизм</li></ul></li><li><var>draw(this)</var> – перегрузка времени исполнения по первому параметру<ul class="item-2 level-2"><li>Ad-hoc полиморфизм</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">59</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Пример полиморфизма (5)</h1><div class="body"><ul class="item-1 level-1"><li>Определение типа во время исполнения</li><li>Пример использования<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">void</span><span class="pln"> draw</span><span class="pun">(</span><span class="typ">Shape</span><span class="pln"> shape</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">shape </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">Rect</span><span class="pun">)</span><span class="pln"> </span><span class="pun">…</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">shape </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">Circle</span><span class="pun">)</span><span class="pln"> </span><span class="pun">…</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li><li><var>draw()</var> – перегрузка времени исполнения<ul class="item-2 level-2"><li>Ad-hoc полиморфизм</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">60</span></div></div></div></div>
<div class="slide section hidden"><div class="content"><h1>Наследование</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc current">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">61</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Общее поведение</h1><div class="body"><ul class="item-1 level-1"><li>Управление размером<ul class="item-2 level-2"><li><var>size</var></li><li><var>isEmpty</var></li><li><var>push</var></li><li><var>pop</var></li></ul></li><li>Обработка <var>null</var><ul class="item-2 level-2"><li><var>push</var></li></ul></li><li>Обработка пустого стека<ul class="item-2 level-2"><li><var>pop</var></li><li><var>peek</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">62</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Вынос общего поведения</h1><div class="body"><ul class="item-1 level-1"><li>Полное дублирование<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> isEmpty</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> size </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li><li>Общая функция/метод</li></ul></li><li>Частичное дублирование<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> peek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> size </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="com">// Получить элемент</span><span class="pln">
    </span><span class="com">// Зависит от реализации</span><span class="pln">
</span><span class="pun">}</span></pre></li><li><span class="question">Что делать?</span></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">63</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Устранение дублирования</h1><div class="body"><ul class="item-1 level-1"><li>Метод для дублирующейся части<ul class="item-2 level-2"><li>Вызывает методы для различных частей</li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> peek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">assert</span><span class="pln"> size </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    doPeek</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">abstract</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> doPeek</span><span class="pun">();</span></pre></li></ul></li><li>Методы для различающихся частей<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">protected</span><span class="pln"> doPeek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// ArrayStack</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> elements</span><span class="pun">[</span><span class="pln">size </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">];</span><span class="pln">
</span><span class="pun">}</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">protected</span><span class="pln"> doPeek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// LinkedStack</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> head</span><span class="pun">.</span><span class="pln">value</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li><li><span class="question">Как реализовать?</span><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental">Указатели на функции</div></li><li class="incremental"><div class="non-incremental">Таблица функций</div></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">64</span></div></div></div></div>
<div class="slide section hidden"><div class="content"><h1>Память и сборка мусора</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc current">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">65</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Интерфейс Copiable</h1><div class="body"><ul class="item-1 level-1"><li>Определение <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">Copiable</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Copiable</span><span class="pln"> makeCopy</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">66</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Стек на массиве</h1><div class="body"><ul class="item-1 level-1"><li>Множественная реализация интерфейсов <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pln">
    </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Copiable</span><span class="pln"> </span><span class="pun">{</span></pre></li><li>Реализация <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="typ">Copiable</span><span class="pln"> makeCopy</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pln"> copy </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">();</span><span class="pln">
    copy</span><span class="pun">.</span><span class="pln">size </span><span class="pun">=</span><span class="pln"> size</span><span class="pun">;</span><span class="pln">
    copy</span><span class="pun">.</span><span class="pln">elements </span><span class="pun">=</span><span class="pln"> elements</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> copy</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">67</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Проблема</h1><div class="body"><ul class="item-1 level-1"><li>Общий массив элементов</li><li><var>makeCopy()</var></li></ul><div class="img-width"><img class="width" style="width: 80%" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/ArrayStack-Copiable-1.svg" /></div><ul class="item-1 level-1"><li><var>pop()</var></li></ul><div class="img-width"><img class="width" style="width: 80%" src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/ArrayStack-Copiable-2.svg" /></div></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">68</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Копирование массива </h1><div class="body"><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="typ">Copiable</span><span class="pln"> makeCopy</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pln"> copy </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">();</span><span class="pln">
    copy</span><span class="pun">.</span><span class="pln">size </span><span class="pun">=</span><span class="pln"> size</span><span class="pun">;</span><span class="pln">
    copy</span><span class="pun">.</span><span class="pln">elements </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Arrays</span><span class="pun">.</span><span class="pln">copyOf</span><span class="pun">(</span><span class="pln">elements</span><span class="pun">,</span><span class="pln"> size</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> copy</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">69</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Соглашения Java</h1><div class="body"><ul class="item-1 level-1"><li>Ссылка передается по значению<ul class="item-2 level-2"><li>Объект – не копируется</li><li>При изменении – изменяется по всем ссылкам</li></ul></li><li>Поверхностное копирование<ul class="item-2 level-2"><li>Только ссылок на объекты</li></ul></li><li>Глубокое копирование<ul class="item-2 level-2"><li>Создание копий объектов</li><li>В явном виде</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">70</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Сборка мусора</h1><div class="body"><ul class="item-1 level-1"><li>Получение ссылки<ul class="item-2 level-2"><li><var>new</var></li><li>присваивание</li><li>вызов метода</li></ul></li><li>Мусор<ul class="item-2 level-2"><li>Нет ссылок</li><li>⇒ никогда не будет</li><li>⇒ можно удалить объект</li></ul></li><li>Сборщик мусора<ul class="item-2 level-2"><li>Удаляет мусор</li><li><var>delete</var> не нужен</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">71</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Уточнение возвращаемого значения</h1><div class="body"><ul class="item-1 level-1"><li>Проблема<ul class="item-2 level-2"><li><var>ArrayStack copy = <span class="warn">(ArrayStack)</span> stack.makeCopy();</var></li></ul></li><li>Решение <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pln"> makeCopy</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">...</span><span class="pln"> </span><span class="pun">}</span></pre></li><li><span class="question">Почему это работает?</span><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental"><var>ArrayStack</var> реализует <var>Copiable</var></div></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">72</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Стек на связном списке</h1><div class="body"><ul class="item-1 level-1"><li>Объявление <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">LinkedStack</span><span class="pln">
    </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Copiable</span><span class="pln"> </span><span class="pun">{</span></pre></li><li>Реализация <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="typ">LinkedStack</span><span class="pln"> makeCopy</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">LinkedStack</span><span class="pln"> copy </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">LinkedStack</span><span class="pun">();</span><span class="pln">
    copy</span><span class="pun">.</span><span class="pln">size </span><span class="pun">=</span><span class="pln"> size</span><span class="pun">;</span><span class="pln">
    copy</span><span class="pun">.</span><span class="pln">head </span><span class="pun">=</span><span class="pln"> head</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> copy</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li><li><span class="question">Почему это работает?</span><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental"><var>Node</var> не изменяется</div></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">73</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Наследование интерфейсов</h1><div class="body"><ul class="item-1 level-1"><li>Конкретный стек можно скопировать<ul class="item-2 level-2"><li><span class="warn"><var>Stack</var> нельзя скопировать</span></li></ul></li><li>Решение <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">Stack</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Copiable</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">...</span><span class="pln"> </span><span class="pun">}</span></pre></li><li>Уточнение возвращаемого значения <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">Stack</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Copiable</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">Stack</span><span class="pln"> makeCopy</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">...</span></pre></li><li>Пример использования <pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pln"> stack </span><span class="pun">=</span><span class="pln"> </span><span class="pun">...;</span><span class="pln">
</span><span class="typ">Stack</span><span class="pln"> copy </span><span class="pun">=</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">makeCopy</span><span class="pun">();</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">74</span></div></div></div></div>
<div class="slide section hidden"><div class="content"><h1>Преобразование объекта в строку</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc current">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">75</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Метод toString</h1><div class="body"><ul class="item-1 level-1"><li>Возвращает строку, описывающую объект</li><li>Наивная реализация <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> toString</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// ArrayStack</span><span class="pln">
    </span><span class="typ">String</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="str">""</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> size</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        result </span><span class="pun">+=</span><span class="pln"> </span><span class="str">" "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> elements</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="str">"["</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> result</span><span class="pun">.</span><span class="pln">substring</span><span class="pun">(</span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">"]"</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental"><span class="question">Оцените время работы</span></div></li><li class="incremental"><div class="non-incremental"><span class="mathO"><span class="math"><span class="MathJax_Preview" style="color: inherit; display: none;"></span><span class="MathJax" id="MathJax-Element-4-Frame" tabindex="0" style="position: relative;" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/math&gt;" role="presentation"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-42" style="width: 3.07em; display: inline-block;"><span style="display: inline-block; position: relative; width: 2.569em; height: 0px; font-size: 119%;"><span style="position: absolute; clip: rect(1.401em, 1002.47em, 2.585em, -1000em); top: -2.285em; left: 0em;"><span class="mrow" id="MathJax-Span-43"><span class="mi" id="MathJax-Span-44" style="font-family: MathJax_Math; font-style: italic;">O</span><span class="mo" id="MathJax-Span-45" style="font-family: MathJax_Main;">(</span><span class="msubsup" id="MathJax-Span-46"><span style="display: inline-block; position: relative; width: 1.029em; height: 0px;"><span style="position: absolute; clip: rect(3.511em, 1000.58em, 4.064em, -1000em); top: -4.003em; left: 0em;"><span class="mi" id="MathJax-Span-47" style="font-family: MathJax_Math; font-style: italic;">n</span><span style="display: inline-block; width: 0px; height: 4.003em;"></span></span><span style="position: absolute; top: -4.366em; left: 0.6em;"><span class="mn" id="MathJax-Span-48" style="font-size: 70.7%; font-family: MathJax_Main;">2</span><span style="display: inline-block; width: 0px; height: 4.003em;"></span></span></span></span><span class="mo" id="MathJax-Span-49" style="font-family: MathJax_Main;">)</span></span><span style="display: inline-block; width: 0px; height: 2.285em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.317em; border-left: 0px solid; width: 0px; height: 1.329em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></math></span></span><script type="math/tex" id="MathJax-Element-4">O(n^2)</script></span></span></div></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">76</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Класс StringBuilder</h1><div class="body"><ul class="item-1 level-1"><li>Эффективное конструирование строк<ul class="item-2 level-2"><li>Использовать в циклах</li></ul></li><li>Применение <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> toString</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">StringBuilder</span><span class="pln"> sb </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">StringBuilder</span><span class="pun">();</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> size</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        sb</span><span class="pun">.</span><span class="pln">append</span><span class="pun">(</span><span class="str">" "</span><span class="pun">).</span><span class="pln">append</span><span class="pun">(</span><span class="pln">elements</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="str">"["</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> sb</span><span class="pun">.</span><span class="pln">substring</span><span class="pun">(</span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">"]"</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental"><span class="question">Оцените время работы</span></div></li><li class="incremental"><div class="non-incremental"><span class="mathO"><span class="math"><span class="MathJax_Preview" style="color: inherit; display: none;"></span><span class="MathJax" id="MathJax-Element-5-Frame" tabindex="0" style="position: relative;" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/math&gt;" role="presentation"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-50" style="width: 2.553em; display: inline-block;"><span style="display: inline-block; position: relative; width: 2.135em; height: 0px; font-size: 119%;"><span style="position: absolute; clip: rect(1.485em, 1002.04em, 2.585em, -1000em); top: -2.285em; left: 0em;"><span class="mrow" id="MathJax-Span-51"><span class="mi" id="MathJax-Span-52" style="font-family: MathJax_Math; font-style: italic;">O</span><span class="mo" id="MathJax-Span-53" style="font-family: MathJax_Main;">(</span><span class="mi" id="MathJax-Span-54" style="font-family: MathJax_Math; font-style: italic;">n</span><span class="mo" id="MathJax-Span-55" style="font-family: MathJax_Main;">)</span></span><span style="display: inline-block; width: 0px; height: 2.285em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.317em; border-left: 0px solid; width: 0px; height: 1.23em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></math></span></span><script type="math/tex" id="MathJax-Element-5">O(n)</script></span></span></div></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">77</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Класс StringJoiner</h1><div class="body"><ul class="item-1 level-1"><li>Слияние строк</li><li>Применение <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">final</span><span class="pln"> </span><span class="typ">StringJoiner</span><span class="pln"> sj
        </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">StringJoiner</span><span class="pun">(</span><span class="str">","</span><span class="pun">,</span><span class="pln"> </span><span class="str">"["</span><span class="pun">,</span><span class="pln"> </span><span class="str">"]"</span><span class="pun">);</span><span class="pln">
</span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> size</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    sj</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="pln">elements</span><span class="pun">[</span><span class="pln">i</span><span class="pun">].</span><span class="pln">toString</span><span class="pun">());</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">return</span><span class="pln"> sj</span><span class="pun">.</span><span class="pln">toString</span><span class="pun">();</span></pre><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental">Время работы <span class="mathO"><span class="math"><span class="MathJax_Preview" style="color: inherit; display: none;"></span><span class="MathJax" id="MathJax-Element-6-Frame" tabindex="0" style="position: relative;" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/math&gt;" role="presentation"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-56" style="width: 2.553em; display: inline-block;"><span style="display: inline-block; position: relative; width: 2.135em; height: 0px; font-size: 119%;"><span style="position: absolute; clip: rect(1.485em, 1002.04em, 2.585em, -1000em); top: -2.285em; left: 0em;"><span class="mrow" id="MathJax-Span-57"><span class="mi" id="MathJax-Span-58" style="font-family: MathJax_Math; font-style: italic;">O</span><span class="mo" id="MathJax-Span-59" style="font-family: MathJax_Main;">(</span><span class="mi" id="MathJax-Span-60" style="font-family: MathJax_Math; font-style: italic;">n</span><span class="mo" id="MathJax-Span-61" style="font-family: MathJax_Main;">)</span></span><span style="display: inline-block; width: 0px; height: 2.285em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.317em; border-left: 0px solid; width: 0px; height: 1.23em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></math></span></span><script type="math/tex" id="MathJax-Element-6">O(n)</script></span></span></div></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">78</span></div></div></div></div>
<div class="slide section hidden"><div class="content"><h1>Основные принципы ООП</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc current">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">79</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Принципы SOLID</h1><div class="body"><ul class="item-1 level-1"><li><var>S</var>ingle Responsibility</li><li><var>O</var>pen/Closed</li><li><var>L</var>iskov Substitution</li><li><var>I</var>nterface Segregation</li><li><var>D</var>ependency Inversion</li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">80</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Single Responsibility</h1><div class="body"><ul class="item-1 level-1"><li>Принцип единственной ответственности<ul class="item-2 level-2"><li>Один класс – одна ответственность</li><li>Одно изменение - одно место</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">81</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Open/Closed</h1><div class="body"><ul class="item-1 level-1"><li>Принцип открытости/закрытости<ul class="item-2 level-2"><li>Открытость для расширения</li><li>Закрытость для изменения</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">82</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Liskov Substitution</h1><div class="body"><ul class="item-1 level-1"><li>Принцип подстановки Лисков<ul class="item-2 level-2"><li>Тип заменяеется любым подтипом</li><li>Ослабление предусловий</li><li>Сохранение инвариантов</li><li>Усиление постусловий</li><li>Ограничение истории</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">83</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Interface Segregation</h1><div class="body"><ul class="item-1 level-1"><li>Принцип разделения интерфейсов<ul class="item-2 level-2"><li>Зависимость только от используемого</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">84</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Dependency Inversion</h1><div class="body"><ul class="item-1 level-1"><li>Принцип инверсии зависимостей<ul class="item-2 level-2"><li>Клиенты зависят от абстракций</li><li>Реализация зависит от абстракций</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">85</span></div></div></div></div>
<div class="slide section hidden"><div class="content"><h1>Особенности ООП</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc current">Особенности ООП</a><ol class="level-2 toc-2"><li><a href="#(87)" class="">Прямоугольник и Квадрат</a></li><li><a href="#(99)" class="">Равенство</a></li></ol></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">86</span></div></div></div></div>
<div class="slide subsection hidden"><div class="content"><h1>Прямоугольник и Квадрат</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc current">Особенности ООП</a><ol class="level-2 toc-2"><li><a href="#(87)" class=" current">Прямоугольник и Квадрат</a></li><li><a href="#(99)" class="">Равенство</a></li></ol></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">87</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Постановка задачи</h1><div class="body"><ul class="item-1 level-1"><li>Прямоугольник<ul class="item-2 level-2"><li>Ширина</li><li>Высота</li></ul></li><li>Квадрат<ul class="item-2 level-2"><li>Сторона</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">88</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Является (is-a)</h1><div class="body"><ul class="item-1 level-1"><li>Квадрат является прямоугольником</li><li>Следовательно <pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Square</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Rectange</span></pre></li><li class="incremental"><div class="non-incremental"><span class="question">Как реализовать <var>setWidth</var>?</span><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental">Изменить сторону</div></li><li class="incremental"><div class="non-incremental">Перестать быть квадратом</div></li></ul></div></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">89</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Расширение</h1><div class="body"><ul class="item-1 level-1"><li>Интерфейс прямоугольника «шире»</li><li>Следовательно <pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Rectangle</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Square</span></pre></li><li class="incremental"><div class="non-incremental"><span class="question">Как реализовать <var>getSide</var>?</span><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental">Не понятно</div></li></ul></div></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">90</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Возможные решения</h1><div class="body"><ul class="item-1 level-1"><li>Неподдерживаемые действия</li><li>Ослабление контракта</li><li>Возврат нового</li><li>Выделение общего предка</li><li>Вынос изменений</li><li>Отказ от наследования</li><li>Подмена класса</li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">91</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Неподдерживаемые действия</h1><div class="body"><ul class="item-1 level-1"><li>Не все действия поддерживаются<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">boolean</span><span class="pln"> setWidth</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> w</span><span class="pun">)</span></pre></li></ul></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Square</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Rectangle</span></pre></li><li class="incremental"><div class="non-incremental">Постоянные проверки</div></li><li class="incremental"><div class="non-incremental">Поддержка со стороны <var>Rectangle</var></div></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">92</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Ослабление контракта</h1><div class="body"><ul class="item-1 level-1"><li>Действия имеют побочные эффекты<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">setWidth </span><span class="pun">≡</span><span class="pln"> setSide</span></pre></li></ul></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Square</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Rectangle</span></pre></li><li class="incremental"><div class="non-incremental">Как этим пользоваться?</div></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">93</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Возврат нового</h1><div class="body"><ul class="item-1 level-1"><li>Операция возвращает новый объект</li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Rectangle</span><span class="pln"> setWidth</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> w</span><span class="pun">)</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Square</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Rectangle</span></pre></li><li class="incremental"><div class="non-incremental">Неизменяемые объекты</div></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">94</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Вынос изменений</h1><div class="body"><ul class="item-1 level-1"><li>Изменения выносятся в отдельный класс</li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Square</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Rectangle</span><span class="pln">
</span><span class="typ">MutableRectangle</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Rectangle</span><span class="pln">
</span><span class="typ">MutableSquare</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Square</span></pre></li><li class="incremental"><div class="non-incremental">Много классов</div></li><li class="incremental"><div class="non-incremental">Комбинаторный взрыв</div></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">95</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Выделение общего предка</h1><div class="body"><ul class="item-1 level-1"><li>Выделить общего предка</li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Square</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">SquareOrRectangle</span><span class="pln">
</span><span class="typ">Rectangle</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">SquareOrRectangle</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">96</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Отказ от наследование</h1><div class="body"><ul class="item-1 level-1"><li>Два независимых класса <pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Square</span><span class="pun">::</span><span class="pln">asRectangle
</span><span class="typ">Rectangle</span><span class="pun">::</span><span class="pln">boundingSquare</span></pre></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">97</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Подмена класса</h1><div class="body"><ul class="item-1 level-1"><li>Класс может меняться</li><li><var>setWidth</var> преобразует в <var>Rectangle</var></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Square</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Rectangle</span></pre></li><li class="incremental"><div class="non-incremental">Не поддерживается популярными языками</div></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">98</span></div></div></div></div>
<div class="slide subsection hidden"><div class="content"><h1>Равенство</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc current">Особенности ООП</a><ol class="level-2 toc-2"><li><a href="#(87)" class="">Прямоугольник и Квадрат</a></li><li><a href="#(99)" class=" current">Равенство</a></li></ol></li><li><a href="#(107)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">99</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Сущности и значения</h1><div class="body"><ul class="item-1 level-1"><li>Изменение частей<ul class="item-2 level-2"><li>Сущность не изменяется</li><li>Новое значение</li></ul></li><li>Примеры<ul class="item-2 level-2"><li>Студент</li><li>Точка</li><li>Адрес</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">100</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Поддержка в Java</h1><div class="body"><ul class="item-1 level-1"><li><span class="question">Чему соответствует <var>==</var>?</span><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental">Сущностям</div></li></ul></li><li class="incremental"><div class="non-incremental">Поддержка значений<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> equals</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> o</span><span class="pun">)</span></pre></li></ul></div></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">101</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Реализация equals</h1><div class="body"><ul class="item-1 level-1"><li>Точка<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">class</span><span class="pln"> </span><span class="typ">Point</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> y</span><span class="pun">;</span></pre></li></ul></li><li>Сравнение<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> equals</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> o</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">o </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">Point</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Point</span><span class="pln"> that </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Point</span><span class="pun">)</span><span class="pln"> o</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">x </span><span class="pun">==</span><span class="pln"> that</span><span class="pun">.</span><span class="pln">x </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">y </span><span class="pun">==</span><span class="pln"> that</span><span class="pun">.</span><span class="pln">y</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li><li class="incremental"><div class="non-incremental"><span class="question">Почему нет проверки на <var>null</var>?</span></div></li><li class="incremental"><div class="non-incremental"><var>null instanceof T</var> ≡ <var>false</var></div></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">102</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Свойства равенства</h1><div class="body"><ul class="item-1 level-1"><li>Рефлексивность<ul class="item-2 level-2"><li><var>x.equals(x)</var> ≡ <var>true</var></li></ul></li><li>Симметричность<ul class="item-2 level-2"><li><var>x.equals(y) </var> ≡ <var> y.equals(x)</var></li></ul></li><li>Транзитивность<ul class="item-2 level-2"><li><var>x.equals(y) &amp;&amp; y.equals(z)</var> ⇒ <var>x.equals(z)</var></li></ul></li><li>Устойчивость<ul class="item-2 level-2"><li><var>x.equals(y)</var> не изменяется, если <var>x</var> и <var>y</var> не изменяются</li></ul></li><li>Обработка <var>null</var><ul class="item-2 level-2"><li><var>x.equals(null) </var> ≡ <var> false</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">103</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Реализация equals (2)</h1><div class="body"><ul class="item-1 level-1"><li>Цветная точка на плоскости<ul class="item-2 level-2"><li><pre class="prettyprint lang-java smaller prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ColorPoint</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Point</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> c</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> equals</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> o</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">o </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">ColorPoint</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">ColorPoint</span><span class="pln"> that </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">ColorPoint</span><span class="pun">)</span><span class="pln"> o</span><span class="pun">;</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">x </span><span class="pun">==</span><span class="pln"> that</span><span class="pun">.</span><span class="pln">x </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">y </span><span class="pun">==</span><span class="pln"> that</span><span class="pun">.</span><span class="pln">y </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">c </span><span class="pun">==</span><span class="pln"> that</span><span class="pun">.</span><span class="pln">c</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li><li><span class="question">Где проблема?</span><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental">Несимметричность</div></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">104</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Пример equals (3)</h1><div class="body"><ul class="item-1 level-1"><li>Цветная точка на плоскости<ul class="item-2 level-2"><li><pre class="prettyprint lang-java smaller prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ColorPoint</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Point</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> c</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> equals</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> o</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">o </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">ColorPoint</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">ColorPoint</span><span class="pln"> that </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">ColorPoint</span><span class="pun">)</span><span class="pln"> o</span><span class="pun">;</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">x </span><span class="pun">==</span><span class="pln"> that</span><span class="pun">.</span><span class="pln">x </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">y </span><span class="pun">==</span><span class="pln"> that</span><span class="pun">.</span><span class="pln">y </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">c </span><span class="pun">==</span><span class="pln"> that</span><span class="pun">.</span><span class="pln">c</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">super</span><span class="pun">.</span><span class="pln">equals</span><span class="pun">(</span><span class="pln">o</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li><li><span class="question">А теперь?</span><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental">Нетранзитивность</div></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">105</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Наследование и equals</h1><div class="body"><ul class="item-1 level-1"><li><var>equals</var> и наследование ⇒ проблемы</li><li>Варианты решения<ul class="item-2 level-2"><li>Сравнивать объекты только одинакового класса</li><li>Сравнивать как предков</li><li>Послойное сравнение<ul class="item-3 level-3"><li><var>canEquals</var></li></ul></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">106</span></div></div></div></div>
<div class="slide section hidden"><div class="content"><h1>Заключение</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классы своими руками</a></li><li><a href="#(29)" class="toc">Конструкторы</a></li><li><a href="#(34)" class="toc">Интерфейсы</a></li><li><a href="#(61)" class="toc">Наследование</a></li><li><a href="#(65)" class="toc">Память и сборка мусора</a></li><li><a href="#(75)" class="toc">Преобразование объекта в строку</a></li><li><a href="#(79)" class="toc">Основные принципы ООП</a></li><li><a href="#(86)" class="toc">Особенности ООП</a></li><li><a href="#(107)" class="toc current">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">107</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Ссылки</h1><div class="body"><ul class="item-1 level-1"><li><em>Мейер Б.</em> Объектно-ориентированное конструирование программных систем <a href="http://www.rusedit.com/book.aspx?BookID=1211" target="_blank">http://www.rusedit.com/book.aspx?BookID=1211</a></li><li>Java Modeling Language <a href="http://www.cs.ucf.edu/~leavens/JML/" target="_blank">http://www.cs.ucf.edu/~leavens/JML/</a></li><li>Сборка мусора <a href="http://ru.wikipedia.org/wiki/%D0%A1%D0%B1%D0%BE%D1%80%D0%BA%D0%B0_%D0%BC%D1%83%D1%81%D0%BE%D1%80%D0%B0" target="_blank"><br />http://ru.wikipedia.org/wiki/Сборка_мусора</a></li><li>Java Tutorial: Interfaces and Inheritance <a href="http://docs.oracle.com/javase/tutorial/java/IandI/index.html" target="_blank">http://docs.oracle.com/javase/tutorial/java/IandI/index.html</a></li></ul></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">108</span></div></div></div></div>
<div class="slide hidden"><div class="content"><h1>Вопросы</h1><div class="body"><div class="questions">???</div></div><div class="footer"><div class="test"><span class="author">Георгий Корнеев</span><span class="title">Парадигмы программирования / Введение в ООП</span><span class="number">109</span></div></div></div></div></div><script type="text/javascript">
        (function (d, w, c) {
            (w[c] = w[c] || []).push(function() {
                try {
                    w.yaCounter19426939 = new Ya.Metrika({
                        id:19426939,
                        clickmap:true,
                        trackLinks:true,
                        accurateTrackBounce:true,
                        webvisor:true
                    });
                } catch(e) { }
            });

            var n = d.getElementsByTagName("script")[0],
                s = d.createElement("script"),
                f = function () { n.parentNode.insertBefore(s, n); };
            s.type = "text/javascript";
            s.async = true;
            s.src = "https://mc.yandex.ru/metrika/watch.js";

            if (w.opera == "[object Opera]") {
                d.addEventListener("DOMContentLoaded", f, false);
            } else { f(); }
        })(document, window, "yandex_metrika_callbacks");
        </script><noscript><div><img src="%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20_%20%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%20%D0%9E%D0%9E%D0%9F%20(1)_files/19426939.gif" style="position:absolute; left:-9999px;" alt="" /></div></noscript><div class="toolbar hidden" tabindex="0"><div style="float: right; text-align: right"><span>слайд 1/109</span></div><div style="text-align: left"><span style="color: rgb(240, 240, 240);">* </span><a href="http://www.w3.org/Talks/Tools/Slidy2/help/help.html" title="Перемещайтесь кликая мышкой, используя клавишу пробел, стрелкивлево/вправо или Pg Up и Pg Dn. Клавиши S и B меняют размер шрифта.">помощь?</a> <a href="javascript:w3c_slidy.toggle_table_of_contents()" title="оглавление">содержание?</a> </div></div><div style="position: absolute; width: 0px; height: 0px; overflow: hidden; padding: 0px; border: 0px none; margin: 0px;"><div id="MathJax_Font_Test" style="position: absolute; visibility: hidden; top: 0px; left: 0px; width: auto; padding: 0px; border: 0px none; margin: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; font-size: 40px; font-weight: normal; font-style: normal; font-size-adjust: none; font-family: MathJax_Main, sans-serif;"></div></div></body></html>